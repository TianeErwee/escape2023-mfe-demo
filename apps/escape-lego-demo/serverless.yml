service: escape-lego-demo

plugins:
  - 'serverless-bundle'
  - serverless-offline

package:
  individually: true

custom:
  stage: ${opt:stage, env:STAGE, 'dev'}
  serverless-offline:
    httpPort: 3333
    lambdaPort: 2333
    noPrependStageInUrl: true
  bundle:
    linting: false
    tsConfig: 'tsconfig.app.json'

params:
  prod:
    production: true
  default:
    production: false

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${self:custom.stage}
  endpointType: regional
  timeout: 20
  region: eu-west-1
  profile: escape
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": [ "InventoryUsers", "Arn" ] }
        - { "Fn::GetAtt": [ "LegoSetsInventory", "Arn" ] }
        - { "Fn::GetAtt": [ "LegoSetsWishlist", "Arn" ] }
  environment:
    APP_ENV: ${self:custom.stage}
    IS_PRODUCTION: ${param:production}
    NODE_OPTIONS: --enable-source-maps
  
resources:
  Resources:
    LegoSetsWishlist:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: wishlist_id
            AttributeType: S
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: wishlist_id
            KeyType: HASH
          -
            AttributeName: user_id
            KeyType: RANGE
        TableName: lego-set-wishlist
        BillingMode: 'PAY_PER_REQUEST'

    LegoSetsInventory:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH
        TableName: lego-set-inventory
        BillingMode: 'PAY_PER_REQUEST'

    InventoryUsers:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: user_id
            AttributeType: S
        KeySchema:
          -
            AttributeName: user_id
            KeyType: HASH
        TableName: inventory-users
        BillingMode: 'PAY_PER_REQUEST'

functions:
  foo:
    handler: src/handlers/foo.handler
    events:
      - http:
          method: GET
          path: /foo
  getsets:
    handler: src/handlers/getsets.handler
    events:
      - http:
          method: GET
          path: /getsets
  add-to-inventory:
    handler: src/handlers/add-to-inventory.handler
    events:
      - http:
          method: POST
          path: /add-to-inventory
